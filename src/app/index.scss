.browsehappy {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

.thumbnail {
  height: 200px;

  img.pull-right {
    width: 50px;
  }
}

/* Empty. Add your own CSS if you like */

/** main menu font type  **/
//@font-face{
//  font-family:stc;
//  src:url("stc.otf") format("opentype");
//}
//p{
//  font-family:stc;
//}
body {

  background-color: #790A58 !important;

  //background-color: ;
}

[nav-view-transition="ios"][nav-view-direction="forward"], [nav-view-transition="ios"][nav-view-direction="back"] {

  background-color: inherit !important;
}

.bar {
  background: transparent !important;
}

.pane {
  background-color: #790A58 !important;
}

/* Chrome, Safari, Opera */
@-webkit-keyframes myfirst {
  0% {
    -webkit-transform: translateX(0px)
  }
  50% {
    -webkit-transform: translateX(200px)
  }
  100% {
    -webkit-transform: translateX(0px)
  }
}

/* Standard syntax */
@keyframes myfirst {
  0% {
    transform: translateX(0px)
  }
  50% {
    transform: translateX(200px)
  }
  100% {
    transform: translateX(0px)
  }
}

.background {
  -webkit-animation: myfirst 50s infinite; /* Chrome, Safari, Opera */
  animation: myfirst 10s;
  z-index: -2;
  width: 100%;
  height: 100%;

}

.background-1 {
  position: absolute;
  left: -400px;
  top: -400px;

}

.background-2 {

}

.background-3 {
}

a, u {
  text-decoration: none;
}

.bar .title {

  color: white;
}

.angular-google-map-container {
  height: 600px;
}

.slider-pager .slider-pager-page {
  color: white;
}

.slider-pager {
  position: static;
  margin-left: 3%;
}

.slider {
  overflow: inherit;
}

.responsive {
  height: 300px;
  width: 44%;
  margin-left: 3%;
  margin-right: 3%;
  box-shadow: 0 0 0 5px white inset;
}

.deckgrid[deckgrid]::before {
  /* Specifies that the grid should have a maximum of 4 columns. Each column will have the classes 'column' and 'column-1-4' */
  content: '3 .column.column-1-3';
  font-size: 0; /* See https://github.com/akoenig/angular-deckgrid/issues/14#issuecomment-35728861 */
  visibility: hidden !important;
  display: none;

}

.alert {
  color: red;
  text-align: center;
}

.success {

  color: green;
  text-align: center;

}

.red {

  color: red !important;
}

.green {
  color: green !important;
}

.item-content {

  padding: 10px;

}

.bar-header {
  border: none;

}

.deckgrid .column {
  float: left;
}

.deckgrid .column-1-3 {
  width: 33%;
}

@media screen and (max-width: 500px) {
  .deckgrid[deckgrid]::before {
    content: '1 .column.column-1-1';
  }

  .deckgrid .column-1-1 {
    width: 100%;
  }
}

.photos {
  line-height: 0;
  -webkit-column-count: 2;
  -moz-column-count: 2;
  column-count: 2;
}

.photos .item {
  width: 100% !important;
  margin-bottom: 10px;
}

.cardflow-wrapper {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 200px;
}

.cardflow-container {
  /* just make it big enough to float the second card next to first, so I can calculate offsets & width */
  width: 200%;

  /* disable text selection */
  -webkit-touch-callout: none;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
  outline: 0;

  cursor: pointer;

  /* card movement transition */
  transition: transform 0.25s ease-out;
  -webkit-transition: -webkit-transform 0.25s ease-out;
  -moz-transition: -moz-transform 0.25s ease-out;
  -o-transition: -o-transform 0.25s ease-out;
  -ms-transition: -ms-transform 0.25s ease-out;

  /* center cards in me */
  padding-left: 50%;
}

.cardflow-card {
  float: left;

  width: 200px;
  height: 200px;

  text-align: center;
  line-height: 200px;

  background: #000;
  background-size: cover;

  border: 1px solid #000;

  /* keep padding & borders inside box size */
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box;

  /* active transition */
  transition: border-color 0.5s ease-out;
  -webkit-transition: border-color 0.5s ease-out;
  -moz-transition: border-color 0.5s ease-out;
  -o-transition: border-color 0.5s ease-out;
  -ms-transition: border-color 0.5s ease-out;
}

/* disable dragging */
.cardflow-card img {
  pointer-events: none;
}

.cardflow-card.cardflow-active {
  border-color: #fff;
}

.cardflow-carousel {
  position: relative;
}

/* style carousel single-card flows */
.cardflow-carousel, .cardflow-carousel .cardflow-card, .cardflow-carousel .cardflow-container, .cardflow-carousel .cardflow-wrapper {
  width: 400px;
  height: 400px;
}

.cardflow-carousel .cardflow-card {
  line-height: 400px;
  text-shadow: 2px 4px 3px rgba(0, 0, 0, 0.3);
  text-align: center;
}

.carousel .cardflow-card {
  margin-right: 0;
}

.cardflow-carousel .indicators {
  position: absolute;
  //background-color: #000;
  //background-color: rgba(0, 0, 0, 0.6);
  z-index: 100;
  bottom: 0;
  left: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  opacity: 0;
  width: 100%;
  text-align: center;
  -webkit-transition: opacity 0.5s ease-out;
  -moz-transition: opacity 0.5s ease-out;
  -o-transition: opacity 0.5s ease-out;
  -ms-transition: opacity 0.5s ease-out;
  transition: opacity 0.5s ease-out;
}

.cardflow-carousel:hover .indicators {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
  filter: alpha(opacity=100);
  opacity: 1;
}

.cardflow-carousel .indicator {
  //background-color: #000;
  //background-color: rgba(10, 10, 10, 0.6);
  cursor: pointer;
  width: 6px;
  height: 6px;
  display: inline-block;
  border-radius: 50%;
  margin: 2px;
  -webkit-transition: color 0.5s ease-out;
  -moz-transition: color 0.5s ease-out;
  -o-transition: color 0.5s ease-out;
  -ms-transition: color 0.5s ease-out;
  transition: color 0.5s ease-out;
}

.cardflow-carousel .indicator.active {
  background-color: #fff;
  background-color: rgba(255, 255, 255, 0.6);
}

/*
You can get much better cross-browser support by doing all your reflections & glows like this:
http://webdesign.tutsplus.com/tutorials/cross-browser-css-reflections-glows-and-blurs--webdesign-6294
*/

cardflow .cardflow-wrapper {
  height: 300px;
  padding-top: 10px;
  //background-image: -webkit-gradient( linear, left bottom, left top, color-stop(0.05, rgb(46,46,46)), color-stop(0.53, rgb(0,0,0)) );
}

cardflow .cardflow-card {
  //margin:0 10px 0 10px;
  -webkit-box-shadow: 0 0 8px 8px rgba(0, 0, 0, 0.5);
  box-shadow: 0 0 8px 8px rgba(0, 0, 0, 0.5);
  -webkit-box-reflect: below 1px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(0.6, transparent), to(rgba(255, 255, 255, 0.5)));
  /*
  this seems to mess up reflection in chrome.
  I can fix with moving everything to 3d, but chrome was also
  doing funny stuff with the transform matrix (mis-repainting)
  I am just going to leave this out.
  */

  /*
  -webkit-transition: -webkit-transform 0.25s ease-out;
  -moz-transition: -moz-transform 0.25s ease-out;
  -o-transition: -o-transform 0.25s ease-out;
  -ms-transition: -ms-transform 0.25s ease-out;
  transition: transform 0.25s ease-out;
  */
}

cardflow .cardflow-card.cardflow-active {
  -webkit-box-shadow: 0 0 4px 4px rgba(127, 127, 127, 0.5);
  box-shadow: 0 0 4px 4px rgba(127, 127, 127, 0.5);
  -webkit-transform: scale(1.1);
  -moz-transform: scale(1.1);
  -o-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

/* disable indent & active card for page-driven coverflows */
.page .cardflow-container {
  padding-left: 0;
}

.page .cardflow-card.cardflow-active {
  border-color: #000;
  -webkit-box-shadow: none;
  box-shadow: none;
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -o-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

/* Do not remove this comments bellow. It's the markers used by gulp-inject to inject
   all your sass files automatically */
// injector
// endinjector
